apply plugin: 'com.android.application'

int majorVersion = 1    //主版本(0~41)   发布版本迭代,重要功能新增,0-未发布
int minorVersion = 0    //次版本(0~99)   内部版本迭代,功能新增
int microVersion = 0    //小版本(0~99)   Bug修复
String stage = "Alpha"  //版本阶段: Alpha Beta RC Release
int stageNo = 1

android {
    // signingConfigs {
    //     debug {
    //         keyAlias 'ts5000'
    //         keyPassword '!!Sanbu2019!!'
    //         storeFile file('../keystore/ts5000_signature.jks')
    //         storePassword 'xungejiaoyu@2019'
    //         v1SigningEnabled true
    //         v2SigningEnabled true
    //     }
    //     release {
    //         keyAlias 'ts5000'
    //         keyPassword '!!Sanbu2019!!'
    //         storeFile file('../keystore/ts5000_signature.jks')
    //         storePassword 'xungejiaoyu@2019'
    //         v1SigningEnabled true
    //         v2SigningEnabled true
    //     }
    // }
    compileSdkVersion 28

    // 获取当前的git的commit_id
    GIT_COMMIT_ID = "git rev-parse --short HEAD".execute().text.trim()

    defaultConfig {
        applicationId "cn.lx.app_mbs_studio"
        minSdkVersion 26
        targetSdkVersion 26
        versionCode getVersionCode(majorVersion, minorVersion, microVersion)
        versionName getVersionName(stage, stageNo, majorVersion, minorVersion, microVersion)

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def type = variant.buildType.name
            if (type.equals('release')) {
                outputFileName = "app_mbs_studio-" + versionName + ".apk"
            } else if (type.equals('debug')) {
                outputFileName = "app_mbs_studio-debug.apk"
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            // signingConfig signingConfigs.release
            buildConfigField "String", "gitCommitId", "\"${GIT_COMMIT_ID}\""
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            // signingConfig signingConfigs.release
            buildConfigField "String", "gitCommitId", "\"${GIT_COMMIT_ID}\""
        }
    }

    lintOptions {
        abortOnError false
    }
    
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        multiDexEnabled true
    }

    packagingOptions {
        exclude 'lib/armeabi-v7a'
        exclude 'lib/x86_64'
    }
}

def getVCSNumber() {
    try {
        Process process = "git rev-list --count HEAD".execute()
        process.waitFor()
        String content = process.getText()
        if (!content.isEmpty())
            return content.toInteger() % 10000
    } catch (Exception e) {

    }
    return 0
}

def getVersionCode(majorVersion, minorVersion, microVersion) {
    int VCSNumber = getVCSNumber()
    return majorVersion * 100000000 + minorVersion * 1000000 + microVersion * 10000 + VCSNumber
}

def getVersionName(stage, stageNo, majorVersion, minorVersion, microVersion) {
    String name = "$majorVersion.$minorVersion.$microVersion"

    stage = stage.toLowerCase()
    if (stage.equals("alpha")) {
        return name + '-a' + stageNo
    } else if (stage.equals("beta")) {
        return name + '-b' + stageNo
    } else if (stage.equals("rc")) {
        return name + '-rc' + stageNo
    } else {
        return name
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.preference:preference:1.1.0'
    implementation 'androidx.viewpager2:viewpager2:1.0.0'

    implementation 'com.google.android.material:material:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'

    implementation 'com.google.code.gson:gson:2.8.2'

    implementation project(':module_base')
    implementation project(':module_ep')
}
